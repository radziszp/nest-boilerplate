version: '3.7'

services:
  traefik:
    image: traefik:v2.2
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo
      POSTGRES_DATABASE: todo
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - backend
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - backend
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_CREATE_TOPICS: "notifier"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - backend
    depends_on:
      - zookeeper
  todo:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE: todo
    labels:
      - traefik.enable=true
      - traefik.http.routers.todo.rule=Host(`todo.localhost`)
      - traefik.http.routers.todo.entrypoints=web
      - traefik.http.services.todo.loadbalancer.server.port=3000
    environment:
      TODO_DATABASES_POSTGRES_HOST: postgres
      TODO_KAFKA_HOST: kafka
    depends_on:
      - postgres
      - traefik
    volumes:
      - ./packages/todo:/opt/app/packages/todo
      - main-modules:/opt/app/node_modules
      - todo-modules:/opt/app/packages/todo/node_modules
    networks:
      - backend
  notifier:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE: notifier
    labels:
      - traefik.enable=true
      - traefik.http.routers.notifier.rule=Host(`notifier.localhost`)
      - traefik.http.routers.notifier.entrypoints=web
      - traefik.http.services.notifier.loadbalancer.server.port=3001
    environment:
      NOTIFIER_KAFKA_HOST: kafka
    depends_on:
      - kafka
      - traefik
    volumes:
      - ./packages/notifier:/opt/app/packages/notifier
      - main-modules:/opt/app/node_modules
      - notifier-modules:/opt/app/packages/notifier/node_modules
    networks:
      - backend

volumes:
  postgres:
  main-modules:
  todo-modules:
  notifier-modules:

networks:
  backend:
