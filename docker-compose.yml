version: '3.7'

services:
  traefik:
    image: traefik:v2.2
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo
      POSTGRES_DATABASE: todo
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - backend
  boilerplate:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE: boilerplate
    labels:
      - traefik.enable=true
      - traefik.http.routers.boilerplate.rule=Host(`boilerplate.localhost`)
      - traefik.http.routers.boilerplate.entrypoints=web
      - traefik.http.services.boilerplate.loadbalancer.server.port=3000
    environment:
      DATABASES_POSTGRES_HOST: postgres
    depends_on:
      - postgres
      - traefik
    volumes:
      - ./packages/boilerplate:/opt/app/packages/boilerplate
      - main-modules:/opt/app/node_modules
      - boilerplate-modules:/opt/app/packages/boilerplate/node_modules
    networks:
      - backend

volumes:
  postgres:
  boilerplate-modules:
  main-modules:

networks:
  backend:
